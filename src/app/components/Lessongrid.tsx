"use client";
import React from 'react';
import '../css/lessons.css';

interface LessonData {
    id: number;
    isCompleted: boolean;
    isActive: boolean;
    isLocked: boolean;
}

interface LessonGridProps {
    chapterNumber: number;     // ‡∏ö‡∏ó‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á (1-6)
    currentStage: number;      // ‡∏î‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ (1-6)
    totalStages?: number;      // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (default: 6)
    onStageClick?: (stageId: number) => void;
}

const LessonGrid = ({ 
    chapterNumber = 1, 
    currentStage = 1, 
    totalStages = 5,
    onStageClick 
}: LessonGridProps) => {

    
    const generateLessons = (): LessonData[] => {
        const lessons: LessonData[] = [];
        
        for (let i = 1; i <= totalStages; i++) {
            lessons.push({
                id: i,
                isCompleted: i < currentStage,  // ‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
                isActive: i === currentStage,   // ‡∏î‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                isLocked: i > currentStage      // ‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Ñ
            });
        }
        
        return lessons;
    };

    const lessons = generateLessons();

    const handleLessonClick = (lessonId: number) => {
        const lesson = lessons.find(l => l.id === lessonId);
        
        if (lesson?.isLocked) {
            alert('‡∏î‡πà‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');
            return;
        }

        console.log(`‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ó‡∏µ‡πà ${chapterNumber} ‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà ${lessonId}`);
        
        if (onStageClick) {
            onStageClick(lessonId);
        }
    };

    return (
        <div className="lesson-grid-container">
            {/* ‚úÖ Grid ‡πÅ‡∏™‡∏î‡∏á‡∏î‡πà‡∏≤‡∏ô */}
            <div className="lesson-grid-wrapper">
                <div className="lesson-grid">
                    {lessons.map((lesson) => (
                        <button
                            key={lesson.id}
                            className={`lesson-circle 
                                ${lesson.isActive ? 'active' : ''} 
                                ${lesson.isCompleted ? 'completed' : ''} 
                                ${lesson.isLocked ? 'locked' : ''}`}
                            onClick={() => handleLessonClick(lesson.id)}
                            disabled={lesson.isLocked}
                        >
                            {lesson.isLocked ? 'üîí' : lesson.id}
                        </button>
                    ))}
                </div>
            </div>

            {/* ‚úÖ Info Card ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó */}
            <div className="lesson-info-cards">
                <div className="info-card unit-card">
                    <h3 className="card-title">‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà {chapterNumber}</h3>
                    <p className="card-subtitle">‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà {currentStage} / {totalStages}</p>
                </div>
            </div>
        </div>
    );
};

export default LessonGrid;